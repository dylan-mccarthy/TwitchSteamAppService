name: 'Shared Infrastructure Deployment'
on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  Plan_Shared:
    runs-on: ubuntu-latest
    environment: Shared
    defaults:
      run:
        working-directory: ./Infra/shared
    env:
      TF_VARS_FILE: shared.tfvars
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_OIDC: true
    steps:
    - name: "Checkout"
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: "Terraform Setup"
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: "Terraform Init"
      id: init
      run: terraform init

    - name: "Terraform Plan"
      id: plan
      run: terraform plan --var-file=$TF_VARS_FILE -out=tfplan

    - name: "Terraform Plan Artifact"
      uses: actions/upload-artifact@v3
      with:
        name: tfplan-shared
        path: ./Infra/shared/tfplan

  Apply_Shared:
    needs: Plan_Shared
    runs-on: ubuntu-latest
    environment: Shared
    defaults:
      run:
        working-directory: ./Infra/shared
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_USE_OIDC: true

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init

    - name: Download Terraform Plan
      uses: actions/download-artifact@v3
      with:
        name: tfplan-shared
        path: ./Infra/shared

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan