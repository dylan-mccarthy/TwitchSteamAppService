name: "App Service Build and Deploy"

on:
  push:
    branches:
      - main
      - releases/**
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.github/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_USE_OIDC: true

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Infra
    env:
      TF_VAR_DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
      TF_VAR_DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Terraform Setup"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: "Terraform Init"
        id: init
        run: terraform init

      - name: "Terraform Plan"
        env:
          TF_VAR_SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
        run: terraform plan -out=tfplan

      - name: "Terraform Plan Artifact"
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: ./Infra/tfplan

  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Infra
    needs: [terraform-plan]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init

    - name: Download Terraform Plan
      uses: actions/download-artifact@v3
      with:
        name: tfplan
        path: ./Infra

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan

  docker_image_build:
    name: "Docker Image Build"
    needs: [terraform-apply]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./TwitchAppDemo
    
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Login Via Azure CLI'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Build and push image
        id: build-image
        run: |
          az acr build --image ${{ secrets.REGISTRY_LOGIN_SERVER}}/twitchappdemo:${{ github.run_number }} --registry ${{ secrets.REGISTRY_LOGIN_SERVER }} --file "Dockerfile" .

      - name: Build and push image
        id: build-image-latest
        run: |
          az acr build --image ${{ secrets.REGISTRY_LOGIN_SERVER}}/twitchappdemo:latest --registry ${{ secrets.REGISTRY_LOGIN_SERVER }} --file "Dockerfile" .

      - name: 'Deploy to Azure App Service'
        uses: azure/webapps-deploy@v2
        with:
          app-name: twitchapp01-app
          images: ${{ secrets.REGISTRY_LOGIN_SERVER}}/twitchappdemo:latest

      - name: Azure logout
        run: az logout