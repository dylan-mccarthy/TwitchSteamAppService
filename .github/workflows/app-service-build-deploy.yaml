name: "App Service Build and Deploy"

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_USE_OIDC: true

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Infra
    env:
      TF_VAR_docker_registry_username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
      TF_VAR_docker_registry_password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Terraform Setup"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: "Terraform Init"
        id: init
        run: terraform init

      - name: "Terraform Plan"
        run: terraform plan -out=tfplan

      - name: "Terraform Plan Artifact"
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: ./Infra/tfplan

  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Infra
    needs: [terraform-plan]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      run: terraform init

    - name: Download Terraform Plan
      uses: actions/download-artifact@v3
      with:
        name: tfplan
        path: ./Infra

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan

  
